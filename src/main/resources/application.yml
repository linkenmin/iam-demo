server:
  port: 8081

spring:
  security:
    oauth2:
      client:
        registration:
          groupware-backend:
            client-id: groupware-backend
            client-secret: XEWFYqfQUTyuhMJCl8Fwr6qr1r0UNVyc
            scope: openid, profile, email, roles
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/{registrationId}"
        provider:
          groupware-backend:
            issuer-uri: http://localhost:8080/realms/my-groupware
            authorization-uri: http://localhost:8080/realms/my-groupware/protocol/openid-connect/auth
            token-uri: http://localhost:8080/realms/my-groupware/protocol/openid-connect/token
            user-info-uri: http://localhost:8080/realms/my-groupware/protocol/openid-connect/userinfo
            jwk-set-uri: http://localhost:8080/realms/my-groupware/protocol/openid-connect/certs
      resourceserver:
        jwt:
          issuer-uri: http://localhost:8080/realms/my-groupware

keycloak:
  realm: my-groupware
  auth-server-url: http://localhost:8080
  resource: groupware-backend
  credentials:
    secret: XEWFYqfQUTyuhMJCl8Fwr6qr1r0UNVyc
  ssl-required: external
  use-resource-role-mappings: true
  principal-attribute: preferred_username
